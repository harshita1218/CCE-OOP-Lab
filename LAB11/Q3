public class MatrixOperations {
    public static void main(String[] args) {
        Matrix matrix = new Matrix(5, 5);

        Thread t1 = new DisplayMatrixThread(matrix);
        Thread t2 = new TransposeMatrixThread(matrix);
        Thread t3 = new MaxValueThread(matrix);
        Thread t4 = new PrincipalDiagonalThread(matrix);
        Thread t5 = new NonDiagonalThread(matrix);

        t1.start();
        t2.start();
        t3.start();
        t4.start();
        t5.start();

        // Check the status of threads using isAlive() method
        System.out.println("t1 is alive: " + t1.isAlive());
        System.out.println("t2 is alive: " + t2.isAlive());
        System.out.println("t3 is alive: " + t3.isAlive());
        System.out.println("t4 is alive: " + t4.isAlive());
        System.out.println("t5 is alive: " + t5.isAlive());

        try {
            // Use join() to wait for threads to complete
            t1.join();
            t2.join();
            t3.join();
            t4.join();
            t5.join();

            // Check the status of threads after they have completed
            System.out.println("t1 is alive: " + t1.isAlive());
            System.out.println("t2 is alive: " + t2.isAlive());
            System.out.println("t3 is alive: " + t3.isAlive());
            System.out.println("t4 is alive: " + t4.isAlive());
            System.out.println("t5 is alive: " + t5.isAlive());
        } catch (InterruptedException e) {
            System.out.println("Main thread interrupted.");
        }

        System.out.println("All threads have completed their execution.");
    }
}
